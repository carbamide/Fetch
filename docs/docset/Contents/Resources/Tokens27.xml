<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSString+Extensions.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSString(Extensions)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSString+Extensions.h</DeclaredIn>
			
			<NodeRef refid="27"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(Extensions)/blankString</TokenIdentifier>
			<Abstract type="html">Blank NSString</Abstract>
			<DeclaredIn>NSString+Extensions.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)blankString</Declaration>
			
			<ReturnValue><Abstract type="html">Blank NSString</Abstract></ReturnValue>
			<Anchor>//api/name/blankString</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(Extensions)/hasValidURLPrefix</TokenIdentifier>
			<Abstract type="html">Check if NSString has valid http or https URL prefix</Abstract>
			<DeclaredIn>NSString+Extensions.h</DeclaredIn>			
			
			<Declaration>- (BOOL)hasValidURLPrefix</Declaration>
			
			<ReturnValue><Abstract type="html">Boolean of whether or not NSString has valid URL prefix</Abstract></ReturnValue>
			<Anchor>//api/name/hasValidURLPrefix</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(Extensions)/hasValue</TokenIdentifier>
			<Abstract type="html">Check whether NSString has value</Abstract>
			<DeclaredIn>NSString+Extensions.h</DeclaredIn>			
			
			<Declaration>- (BOOL)hasValue</Declaration>
			
			<ReturnValue><Abstract type="html">Whether or not NSString has value</Abstract></ReturnValue>
			<Anchor>//api/name/hasValue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(Extensions)/formatInterval:</TokenIdentifier>
			<Abstract type="html">Converts NSTimeInterval to friendly string</Abstract>
			<DeclaredIn>NSString+Extensions.h</DeclaredIn>			
			
			<Declaration>- (NSString *)formatInterval:(NSTimeInterval)interval</Declaration>
			<Parameters>
				<Parameter>
					<Name>interval</Name>
					<Abstract type="html">The NSTimeInterval to convert</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Friendly NSString of the interval</Abstract></ReturnValue>
			<Anchor>//api/name/formatInterval:</Anchor>
		</Token>
		
	</File>
</Tokens>